#install.packages("tidyverse",
#                 dependencies = TRUE, repos = "https://cran.rstudio.com")
library(tidyverse)
# Read all the files and create a FileName column to store filenames
df <- list_of_files %>%
set_names(.) %>%
map_df(read_table2, .id = "FileName")
library("readtext")
list_of_files <- list.files(path = "./Fixed_Judgements/", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
#install.packages("tidyverse",
#                 dependencies = TRUE, repos = "https://cran.rstudio.com")
library(tidyverse)
# Read all the files and create a FileName column to store filenames
df <- list_of_files %>%
set_names(.) %>%
map_df(read_table2, .id = "FileName")
View(df)
library("readtext")
setwd("./Fixed_Judgements/")
getwd()
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
#install.packages("tidyverse",
#                 dependencies = TRUE, repos = "https://cran.rstudio.com")
library(tidyverse)
# Read all the files and create a FileName column to store filenames
df <- list_of_files %>%
set_names(.) %>%
map_df(readtext, .id = "FileName")
View(df)
df<-df[,-1]
colnames(df)<-c("FileName","Text")
View(df)
getwd()
setwd("C:/Users/Apurva Tawde/Downloads/Rule14/Sample Problem/")
Interview_Mapping<-read.csv("Interview_Mapping.csv")
View(Interview_Mapping)
names(Interview_Mapping)
merge(df,Interview_Mapping,by.x="Filename",by.y="Judgements")
# Read all the files and create a FileName column to store filenames
df <- list_of_files %>%
set_names(.) %>%
map_df(readtext, .id = "FileName")
colnames(df)<-c("Judgements","Text")
View(df)
df<-merge(df,Interview_Mapping,by.x="Judgements",by.y="Judgements")
# Read all the files and create a FileName column to store filenames
df <- list_of_files %>%
set_names(.) %>%
map_df(readtext, .id = "FileName")
library("readtext")
setwd("./Fixed_Judgements/")
getwd()
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
#install.packages("tidyverse",
#                 dependencies = TRUE, repos = "https://cran.rstudio.com")
library(tidyverse)
# Read all the files and create a FileName column to store filenames
df <- list_of_files %>%
set_names(.) %>%
map_df(readtext, .id = "FileName")
df<-df[,-1]
colnames(df)<-c("Judgements","Text")
setwd("C:/Users/Apurva Tawde/Downloads/Rule14/Sample Problem/")
Interview_Mapping<-read.csv("Interview_Mapping.csv")
df<-merge(df,Interview_Mapping,by.x="Judgements",by.y="Judgements")
library("readtext")
setwd("./Fixed_Judgements/")
getwd()
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
#install.packages("tidyverse",
#                 dependencies = TRUE, repos = "https://cran.rstudio.com")
library(tidyverse)
# Read all the files and create a FileName column to store filenames
df <- list_of_files %>%
set_names(.) %>%
map_df(readtext, .id = "FileName")
df<-df[,-1]
colnames(df)<-c("Judgements","Text")
setwd("C:/Users/Apurva Tawde/Downloads/Rule14/Sample Problem/")
Interview_Mapping<-read.csv("Interview_Mapping.csv")
df_1<-merge(df,Interview_Mapping,by.x="Judgements",by.y="Judgements")
df_1<-merge(df,Interview_Mapping,by="Judgements")
head(df)
View(df)
df<-sub(".txt","",df)
View(df)
df[,1]<-sub(".*.txt","",df[,1])
View(df)
setwd("./Fixed_Judgements/")
# Read all the files and create a FileName column to store filenames
df <- list_of_files %>%
set_names(.) %>%
map_df(readtext, .id = "FileName")
df<-df[,-1]
colnames(df)<-c("Judgements","Text")
setwd("C:/Users/Apurva Tawde/Downloads/Rule14/Sample Problem/")
Interview_Mapping<-read.csv("Interview_Mapping.csv")
df[,1]<-sub(".txt","",df[,1])
head(df)
library("readtext")
setwd("./Fixed_Judgements/")
getwd()
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
#install.packages("tidyverse",
#                 dependencies = TRUE, repos = "https://cran.rstudio.com")
library(tidyverse)
# Read all the files and create a FileName column to store filenames
df <- list_of_files %>%
set_names(.) %>%
map_df(readtext, .id = "FileName")
setwd("C:/Users/Apurva Tawde/Downloads/Rule14/Sample Problem/")
Interview_Mapping<-read.csv("Interview_Mapping.csv")
View(df)
df[,1]<-sub("./","",df[,1])
head(df)
library("readtext")
setwd("./Fixed_Judgements/")
getwd()
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
#install.packages("tidyverse",
#                 dependencies = TRUE, repos = "https://cran.rstudio.com")
library(tidyverse)
# Read all the files and create a FileName column to store filenames
df <- list_of_files %>%
set_names(.) %>%
map_df(readtext, .id = "FileName")
df<-df[,-1]
colnames(df)<-c("Judgements","Text")
setwd("C:/Users/Apurva Tawde/Downloads/Rule14/Sample Problem/")
df[,1]<-str_replace(df[,1, ".txt", "")
df[,1]<-str_replace(df[,1], ".txt", "")
head(df)
View(df)
df_1<-merge(df,Interview_Mapping,by="Judgements")
View(df_1)
df_1<-merge(Interview_Mapping,df,by="Judgements")
View(df_1)
summary(df_1)
summary(df_1$Area.of.Law,max=100)
# Inside bars
ggplot(data=df_1, aes(x=Area.of.Law)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=len), vjust=1.6, color="white", size=3.5)+
theme_minimal()
library(ggplot2)
setwd("./Fixed_Judgements/")
setwd("C:/Users/Apurva Tawde/Downloads/Rule14/Sample Problem/")
# Inside bars
ggplot(data=df_1, aes(x=Area.of.Law)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
# Inside bars
ggplot(df_1, aes(x=Area.of.Law))+
geom_histogram(color="darkblue", fill="lightblue")
str(df_1)
# Inside bars
ggplot(df_1, aes(x=Area.of.Law))+
geom_histogram(color="darkblue", fill="lightblue")
# Inside bars
ggplot(df_1, aes(x=Area.of.Law))+
geom_histogram(color="darkblue", fill="lightblue",stat = "count")
# Inside bars
ggplot(df_1, aes(x=Area.of.Law))+
geom_histogram(color="darkblue", fill="lightblue",stat = "identity")
# Inside bars
ggplot(df_1, aes(y=Area.of.Law))+
geom_histogram(color="darkblue", fill="lightblue",stat = "count")
# Inside bars
ggplot(df_1, aes(y=Area.of.Law))+
geom_histogram(color="darkblue", fill="lightblue")
# Inside bars
ggplot(df_1, aes(y=Area.of.Law))+
geom_histogram(color="darkblue", fill="lightblue",stat_bin())
# load the library
library(forcats)
data<-df_1
# Reorder following the value of another column:
data %>%
mutate(name = fct_reorder(Area.of.Law)) %>%
ggplot( aes(x=name)) +
geom_bar(stat="count", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
theme_bw()
# Reorder following the value of another column:
data %>%
mutate(Area.of.Law = fct_reorder(Area.of.Law)) %>%
ggplot( aes(x=Area.of.Law)) +
geom_bar(stat="count", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
theme_bw()
# Reorder following the value of another column:
data %>%
mutate(Area.of.Law = fct_reorder(Area.of.Law)) %>%
ggplot( aes(x=Area.of.Law)) +
geom_bar(stat="count", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
theme_bw()
# Inside bars
ggplot(df_1, aes(y=Area.of.Law))+
geom_histogram(color="darkblue", fill="lightblue",stat = "count")+coord_flip()
# Inside bars
ggplot(df_1, aes(x=Area.of.Law))+
geom_histogram(color="darkblue", fill="lightblue",stat = "count")+coord_flip()
data$Area.of.Law <- factor(data$Area.of.Law, levels = data$Area.of.Law[order(count(data$Area.of.Law))])
# Inside bars
library(dplyr)
data <- df_1 %>%
group_by(Area.of.Law) %>%
summarise(counts = n())
# Create the bar plot. Use theme_pubclean() [in ggpubr]
ggplot(data, aes(x = Area.of.Law, y = counts)) +
geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = counts), vjust = -0.3) +
theme_pubclean()
# Create the bar plot. Use theme_pubclean() [in ggpubr]
ggplot(data, aes(x = Area.of.Law, y = counts)) +
geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = counts), vjust = -0.3) +
theme_bw()
# Create the bar plot. Use theme_pubclean() [in ggpubr]
ggplot(data, aes(x = Area.of.Law, y = counts)) +
geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = counts), vjust = -0.3) +
theme_bw()+cord_flip()
# Create the bar plot. Use theme_pubclean() [in ggpubr]
ggplot(data, aes(x = Area.of.Law, y = counts)) +
geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = counts), vjust = -0.3) +
theme_bw()+Cord_flip()
# Create the bar plot. Use theme_pubclean() [in ggpubr]
ggplot(data, aes(x = Area.of.Law, y = counts)) +
geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = counts), vjust = -0.3) +
theme_bw()+coord_flip()
# Create the bar plot. Use theme_pubclean() [in ggpubr]
ggplot(data, aes(x = Area.of.Law, y = order(counts))) +
geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = counts), vjust = -0.3) +
theme_bw()+coord_flip()
# Create the bar plot. Use theme_pubclean() [in ggpubr]
ggplot(data, aes(x = Area.of.Law, y = counts)) +
geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = counts), vjust = -0.3) +
theme_bw()+coord_flip()
data$counts<-factor(data$Area.of.Law, ordered = TRUE)
# Create the bar plot. Use theme_pubclean() [in ggpubr]
ggplot(data, aes(x = Area.of.Law, y = counts)) +
geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = counts), vjust = -0.3) +
theme_bw()+coord_flip()
# Inside bars
library(dplyr)
data <- df_1 %>%
group_by(Area.of.Law) %>%
summarise(counts = n())
ggplot(mutate(data, Area.of.Law = fct_infreq(Area.of.Law))) + geom_bar(aes(x = Area.of.Law))
data <- df_1 %>%
group_by(Area.of.Law) %>%
summarise(counts = n())
ggplot(mutate(data, Area.of.Law = fct_infreq(Area.of.Law))) + geom_bar(aes(x = counts))
ggplot(mutate(df_1, Area.of.Law = fct_infreq(Area.of.Law))) + geom_bar(aes(x = Area.of.Law))
ggplot(mutate(df_1, Area.of.Law = fct_infreq(Area.of.Law))) + geom_bar(aes(x = Area.of.Law))+ geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = counts), vjust = -0.3) +
theme_bw()+coord_flip()
ggplot(mutate(df_1, Area.of.Law = fct_infreq(Area.of.Law))) + geom_bar(aes(x = Area.of.Law))+ geom_bar(fill = "#0073C2FF", stat = "identity") +
theme_bw()+coord_flip()
ggplot(mutate(df_1, Area.of.Law = fct_infreq(Area.of.Law))) + geom_bar(aes(x = Area.of.Law),fill = "#0073C2FF")+
theme_bw()+coord_flip()
ggplot(mutate(df_1, Area.of.Law = fct_infreq(Area.of.Law))) +
geom_bar(aes(x = Area.of.Law),fill = "#0073C2FF",stat = "count")+
theme_bw()+
# Create the bar plot. Use theme_pubclean() [in ggpubr]
ggplot(data, aes(x = Area.of.Law, y = counts)) +
geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = counts), vjust = -0.3) +
theme_bw()+coord_flip()
ggplot(mutate(df_1, Area.of.Law = fct_infreq(Area.of.Law))) +
geom_bar(aes(x = Area.of.Law),fill = "#0073C2FF",stat = "count")+
theme_bw()
ggplot(mutate(df_1, Area.of.Law = fct_infreq(Area.of.Law))) +
geom_bar(aes(x = Area.of.Law),fill = "#0073C2FF",stat = "count")+
theme_bw()coord_flip()
ggplot(mutate(df_1, Area.of.Law = fct_infreq(Area.of.Law))) +
geom_bar(aes(x = Area.of.Law),fill = "#0073C2FF",stat = "count")+
theme_bw()+coord_flip()
ggplot(mutate(df_1, Area.of.Law = fct_infreq(Area.of.Law))) +
geom_bar(aes(x = Area.of.Law),fill = "#0073C2FF",stat = "count")+
theme_bw()+coord_flip()+geom_text(aes(label = count), vjust = -0.3)
ggplot(mutate(df_1, Area.of.Law = fct_infreq(Area.of.Law))) +
geom_bar(aes(x = Area.of.Law),fill = "#0073C2FF",stat = "count")+
theme_bw()+coord_flip()+geom_text(aes(label = ), vjust = -0.3)
ggplot(mutate(data, Area.of.Law = fct_infreq(Area.of.Law))) +
geom_bar(aes(x = Area.of.Law),fill = "#0073C2FF",stat = "count")+
theme_bw()+coord_flip()+geom_text(aes(label = ), vjust = -0.3)
ggplot(mutate(data, Area.of.Law = fct_infreq(Area.of.Law))) +
geom_bar(aes(x = Area.of.Law),fill = "#0073C2FF",stat = "count")+
theme_bw()+coord_flip()+geom_text(aes(label = counts), vjust = -0.3)
ggplot(mutate(data, Area.of.Law = fct_infreq(Area.of.Law))) +
geom_bar(aes(x = Area.of.Law),fill = "#0073C2FF",stat = "identity")+
theme_bw()+coord_flip()+geom_text(aes(label = counts), vjust = -0.3)
# Create the bar plot.
ggplot(data, aes(x = Area.of.Law, y = counts)) +
geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = counts), vjust = -0.3) +
theme_bw()+coord_flip()
# Create the bar plot.
ggplot(data, aes(x = Area.of.Law, y = counts)) +
geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = counts), vjust = -0.3) +
theme_bw()+coord_flip()+geom_text()
# Create the bar plot.
ggplot(data, aes(x = Area.of.Law, y = counts)) +
geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = counts), vjust = -0.3) +
theme_bw()+coord_flip()+geom_text(label=counts)
# Create the bar plot.
ggplot(data, aes(x = Area.of.Law, y = counts)) +
geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = counts), vjust = -0.3) +
theme_bw()+coord_flip()
# Create the bar plot.
data %>%
mutate(Area.of.Law = fct_reorder(Area.of.Law, counts)) %>%
ggplot(data, aes(x = Area.of.Law, y = counts)) +
geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = counts), vjust = -0.3) +
theme_bw()+coord_flip()
library(forcats)
# Create the bar plot.
data %>%
mutate(Area.of.Law = fct_reorder(Area.of.Law, counts)) %>%
ggplot(data, aes(x = Area.of.Law, y = counts)) +
geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = counts), vjust = -0.3) +
theme_bw()+coord_flip()
data <- df_1 %>%
group_by(Area.of.Law) %>%
summarise(counts = n())
# Create the bar plot.
data %>%
mutate(Area.of.Law = fct_reorder(Area.of.Law, counts)) %>%
ggplot( aes(x=Area.of.Law, y=counts)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
theme_bw()
# Create the bar plot.
data %>%
mutate(Area.of.Law = fct_reorder(Area.of.Law, counts)) %>%
ggplot(data, aes(x = Area.of.Law, y = counts)) +
geom_bar(stat="identity", fill="#0073C2FF", alpha=.6, width=.4) +
coord_flip() +
xlab("") +geom_text(aes(label = counts), vjust = -0.3)
# Create the bar plot.
data %>%
mutate(Area.of.Law = fct_reorder(Area.of.Law, counts)) %>%
ggplot(aes(x = Area.of.Law, y = counts)) +
geom_bar(stat="identity", fill="#0073C2FF", alpha=.6, width=.4) +
coord_flip() +
xlab("") +geom_text(aes(label = counts), vjust = -0.3)
# Create the bar plot.
data %>%
mutate(Area.of.Law = fct_reorder(Area.of.Law, counts)) %>%
ggplot(aes(x = Area.of.Law, y = counts)) +
geom_bar(stat="identity", fill="#0073C2FF", alpha=.6, width=.4) +
coord_flip() +
xlab("") +geom_text(aes(label = counts), vjust =0.3)
# Create the bar plot.
data %>%
mutate(Area.of.Law = fct_reorder(Area.of.Law, counts)) %>%
ggplot(aes(x = Area.of.Law, y = counts)) +
geom_bar(stat="identity", fill="#0073C2FF", alpha=.6, width=.4) +
coord_flip() +
xlab("") +geom_text(aes(label = counts))
write.csv(df_1,file = "Merged_data.csv")
View(df_1)
write.csv(df_1,file = "Merged_data.csv",fileEncoding = "utf-8")
